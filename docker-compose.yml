version: '3.7'

services:
  db:
    image: postgres:15
    container_name: postgres_container
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s  #исправить на проде
      timeout: 5s
      retries: 5
    volumes:
      - postgresdata:/var/lib/postgresql/basketlog_data
      - ./init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    env_file:
      - .env-main
    ports:
      - 5555:5432
    networks:
      - custom_network

  redis:
    image: redis:7
    container_name: redis_container
    restart: always
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redisdata:/data
    ports:
      - 6379:6379
    networks:
      - custom_network

  auth-service:
    image: auth-service
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    env_file:
      - ./backend/auth-service/.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/auth-service/app/migrations:/auth-service/app/migrations
    networks:
      - custom_network

volumes:
  postgresdata:
  redisdata:


networks:
  custom_network:
    driver: bridge